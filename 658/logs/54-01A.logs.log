do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000216007232666
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.47955322266e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.19752502441e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
executed snippet estimated_duration=0.0, duration=0.00206995010376
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000137090682983
executed snippet estimated_duration=4.0, duration=0.00112009048462
Script duration 540.0
Run total estimated duration= 541.000
run duration: 0:09:01
doing event level: 2
15:48:23 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4969982288
close session 4969982288
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 65854-01A
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 65854-01A
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
15:48:23 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.14364,0.02950,0.16128,-0.04304,-0.06190,0.00015
15:48:23 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
15:48:23 -- ******* Pre Extraction Check Passed *******
=================================================================================
15:48:23 -- stopping status monitor
stop 4957965584
Status monitor stopped
Status monitor finished
15:48:25 -- starting status monitor
start 4957965584
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 15:48:26.922285
Extraction Started jan_co2.py
15:48:26 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x10b3e2770>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.72068786621e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
executed snippet estimated_duration=100.0, duration=0.00193810462952
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.10215759277e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.019406080246
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.00011682510376
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
15:48:27 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
15:48:27 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
15:48:28 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
15:48:28 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
15:48:29 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
15:48:30 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
15:48:30 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
15:48:30 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
15:48:31 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=4.94017887115
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '1.25') {}
setting motor "beam" to 1.25
set motor beam to 1.25
SetMotor beam,1.25 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
move_to_position ('1',) {'autocenter': True}
FusionsCO2 move to position 1
sending GoToHole 1,True
GoToHole 1,True ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> -3.98780,15.95120,1.00000
got position (-3.9878, 15.9512, 1.0)
move to position succeeded
sleep (5,) {}
SLEEP 5.0
block started
WaitControl setup for 5.0  
Join finished
block finished. duration 5.02294301987
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
15:48:55 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
enable laser
enable () {}
set extraction state FusionsCO2 Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
begin interval
BEGIN INTERVAL Interval 1 waiting for 30.0
block started
WaitControl setup for 30.0  
set extract to 0.1
extract (0.1,) {}
GetPosition ===>> -3.98780,15.95120,1.00000
set extraction state FusionsCO2 ON! 0.1(watts) (0.75, 'red', 1.5)
extract sample to 0.1 (watts)
set laser output
SetLaserOutput 0.1,watts ===>> OK
executing pattern triangle.lp
execute_pattern ('triangle.lp',) {}
executing pattern triangle.lp
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
Join finished
block finished. duration 30.0790541172
Interval 1 finished
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
end_extract () {}
ending extraction. set laser power to 0
set laser power 0
SetLaserPower 0 ===>> OK
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0902841091
executed snippet estimated_duration=165.0, duration=90.0865700245
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 1
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-10-02T15:34:15',
                    'title': 'iServer Hum.',
                    'value': 28.6}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-10-02T15:48:57',
                     'title': None,
                     'value': 83.4},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-10-02T15:48:57',
                     'title': None,
                     'value': 83.71558}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-10-02T13:39:55',
                       'title': None,
                       'value': -194.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-10-02T15:21:04',
                       'title': 'iServer Temp.',
                       'value': 74.4},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-10-02T15:27:31',
                       'title': None,
                       'value': 18.0}]}
Extraction Finished
15:49:59 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
15:49:59 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.258926936459
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/Pychron/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0549 5.8785 5.9923 6.1934 6.2298 6.6787
Ar39     6.0098 5.7695 6.0564 6.3366 6.1125 6.5652
Ar36     5.6873 5.4385 5.7198 5.9954 5.7675 6.2163
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 197.923274125618
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=65854 analysis type=unknown
Measurement Started jan_unknown400_120.py
15:49:59 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09645
GetGain L1 ===>> 0.010309
GetGain L2 ===>> 0.091218
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.035158395898
GetParameter Source Current Readback ===>> 553.996337667094
pre measurement save
New frame /Users/jan/Pychron/data/isotopes/71/60cacf-eee2-4b78-a75f-8ab2daa2eca4.h5
flush and close file /Users/jan/Pychron/data/isotopes/71/60cacf-eee2-4b78-a75f-8ab2daa2eca4.h5
testing...
no interpolation path defined
executed snippet estimated_duration=552.28, duration=0.000194072723389
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.008+/-0.004
 - setting Ar40 blank 0.524+/-0.007
 - setting Ar36 blank 0.00382+/-0.00016
 - setting Ar37 blank 0.041+/-0.005
 - setting Ar38 blank 0.0120+/-0.0023
 - setting Ar39 blank 0.027+/-0.009
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
molweights={'Ar41': 41.0, 'Ar40': 39.9624, 'Ar42': 42.0, 'Ar35': 35.0, 'Ar36': 35.9675, 'Ar37': 36.9668, 'Ar38': 37.9627, 'Ar39': 38.964}
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02909323e+00]
H1 map mass to dac 39.9624 >> 5.8785
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87846538206) on H1
setting magnet DAC
current  : 5.240581
requested: 5.878465
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.87846538206 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1f41fe8f0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1c1b3d5f0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1f41fe1d0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
15:50:03 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
15:50:03 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
15:50:06 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 12.0sec
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/Pychron/data/isotopes/71/60cacf-eee2-4b78-a75f-8ab2daa2eca4.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
15:50:18 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
15:50:19 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
15:50:19 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00014591217041
executed snippet estimated_duration=4.0, duration=0.00118803977966
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000134944915771
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
15:50:19 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.692
flush and close file /Users/jan/Pychron/data/isotopes/71/60cacf-eee2-4b78-a75f-8ab2daa2eca4.h5
set_fits () {}
using default fits file=/Users/jan/Pychron/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/Pychron/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/Pychron/data/isotopes/71/60cacf-eee2-4b78-a75f-8ab2daa2eca4.h5
measuring signal. ncounts=400
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
"signal" increment series count="2" fit count="1" regressing="True"
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
15:50:20 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
starting measurement
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
15:50:21 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
15:50:22 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
15:50:22 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
15:50:23 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
15:50:24 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=5.90306591988
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=5.91599798203
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
15:50:25 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
15:50:45 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
15:51:12 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
15:51:38 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.007009643580176066}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006789808866561059}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006855591666239659}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0066180514968507955}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006579527487044733}"
15:52:04 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006241246426992288}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0061317105965883354}"
len selected runs 1
cloning run 65854-01. set_labnumber=True, set_position=True
labnumber changed old:c-02-J, new:65854
using cached meta values for 65854
clear labnumber
labnumber changed old:65854, new:
clear labnumber
clear labnumber
close session 4969982288
matched Position to 1
name=Extraction, new=co2, suppress=True
calculating time of run 65854-01
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000139951705933
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.121925354e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.10215759277e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.51290130615e-05
executed snippet estimated_duration=0.0, duration=0.00279211997986
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000124931335449
executed snippet estimated_duration=4.0, duration=0.00112915039062
Script duration 540.0
Run total estimated duration= 541.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:540.0
pump_ms in script context. using previous estimated duration
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
pump_extraction_line in script context. using previous estimated duration
Script duration 540.0
Run total estimated duration= 541.000
nruns=2 before=5.0, run_dur=1082.0, btw=15.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000152111053467
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.00271606445e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.20024108887e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.70227813721e-05
executed snippet estimated_duration=0.0, duration=0.00203800201416
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000133991241455
executed snippet estimated_duration=4.0, duration=0.001384973526
Script duration 540.0
Run total estimated duration= 541.000
run duration: 541.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006110591166759286}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.006017191832593878}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005862342528140186}"
15:52:30 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005804149677869263}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005627562082777083}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005585059870039697}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0054404809562355935}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005311359446670773}"
15:52:57 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0051931324106405516}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005085365691479419}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00501227757970624}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004939436369486634}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.005000060849201565}"
15:53:23 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004974886845919605}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004956901350918666}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0049007405833716025}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004886694553839299}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004934640276403807}"
15:53:49 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004865155244534794}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00479717344196032}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004768504026502188}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00464651660824754}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0046492171763274906}"
15:54:16 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00459208025377064}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004593652946746887}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004572373935708838}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004572212142052651}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004586228770384111}"
15:54:42 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004627893079148027}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0045611528804834255}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00457225287884487}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004479997558020535}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004415300845963434}"
15:55:08 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004423402324955526}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004424124913491836}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0043751059999404835}"
no intensity change cnt= 0
signals=[ -7.56557004e-02   3.92977881e+00   3.07587284e-01  -6.94168298e-04
  -3.24292335e-02   6.82387775e-03]
prev_signals=[ -7.56557004e-02   3.92977881e+00   3.07587284e-01  -6.94168298e-04
  -3.24292335e-02   6.82387775e-03]
resetting no_intensity_change_cnt
signals=[ -7.17125126e-02   4.01913024e+00   2.29394338e-01  -1.98799456e-03
  -1.51618845e-02   7.41725871e-03]
prev_signals=[ -7.56557004e-02   3.92977881e+00   3.07587284e-01  -6.94168298e-04
  -3.24292335e-02   6.82387775e-03]
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004317237781957144}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004327262431108846}"
15:55:34 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004383782640129528}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004397225830259322}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004397986117652878}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004443376813128085}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004427104205585673}"
15:56:01 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004410741401413193}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004376266502571861}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004340349183217739}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004333881725424982}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004332168065561125}"
15:56:27 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004336792664938925}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004308921726547043}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0043200676156522925}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00431150864482092}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004295868513956414}"
15:56:53 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00427797896140036}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004283451532919377}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004272589348895699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004232105881037183}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07468270919900218}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004257053963046981}"
15:57:20 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.497
flush and close file /Users/jan/Pychron/data/isotopes/71/60cacf-eee2-4b78-a75f-8ab2daa2eca4.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/Pychron/data/isotopes/71/60cacf-eee2-4b78-a75f-8ab2daa2eca4.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.02909323e+00]
H1 map mass to dac 34.2 >> 5.24061160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24058074625) on H1
setting magnet DAC
current  : 5.878465
requested: 5.240581
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24058074625 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08011907417671005}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.051240365403691895}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05339872587515505}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05835200031280376}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06780213277383661}"
15:58:04 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06936086609460484}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06883559726335692}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06783031995189275}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06785029337618766}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06940487963411746}"
15:58:31 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07071790268146338}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07465267357818231}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07692274281997241}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07820389793667379}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07863736725129433}"
15:58:57 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07768694508075862}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004257536093297685}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07744111278134394}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004256105399099358}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07680553217995602}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.00425650225598972}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07626603003178167}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0042552787546480215}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07541734980953134}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.0042556772747035666}"
15:59:23 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07601165938711144}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004256037475523001}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07765297700362919}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004256364630395699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07852603592358975}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004255361814622457}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07725577572055875}"
testing Ar36<0.001
evaluate ot="Ar36.bs_corrected<0.001" t="Ar36<0.001", ctx="{'Ar36': 0.004254443269082262}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.188
flush and close file /Users/jan/Pychron/data/isotopes/71/60cacf-eee2-4b78-a75f-8ab2daa2eca4.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=4.86164268333 threshold=5.0
Skipping peak center. intensities to small. 4.86164268333<5.0
finished measure script
executed snippet estimated_duration=552.28, duration=585.768277168
jan_unknown400_120.py completed successfully
Measurement Finished
15:59:45 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
15:59:45 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.69412994385e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
15:59:45 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.375903129578
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
15:59:46 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-10-02T15:59:41',
                    'title': 'iServer Hum.',
                    'value': 28.9}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-10-02T15:58:59',
                     'title': None,
                     'value': 118.05},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-10-02T15:58:59',
                     'title': None,
                     'value': 120.95902}],
 'lab_temperatures': [{'device': 'Coldfinger',
                       'name': 'ColdFinger Temp.',
                       'pub_date': '2017-10-02T13:39:55',
                       'title': None,
                       'value': -194.0},
                      {'device': 'EnvironmentalMonitor',
                       'name': 'Lab Temp.',
                       'pub_date': '2017-10-02T15:21:04',
                       'title': 'iServer Temp.',
                       'value': 74.4},
                      {'device': 'Chiller',
                       'name': 'Coolant Temp.',
                       'pub_date': '2017-10-02T15:27:31',
                       'title': None,
                       'value': 18.0}]}
persistence save...
persistence save - db
post measurement save
7615873584 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 7615873584
close session 7615873584
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4476439824
MassSpec Database Version: 16.0
close session 4476439824
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to 65854
setting aliquot to 1
setting step to A
setting uuid to 7160cacf-eee2-4b78-a75f-8ab2daa2eca4
setting irradpos to 65854
setting extract_device to Fusions CO2
setting tray to 
setting position to 1
setting power_requested to 0.1
setting extract_value to 0.1
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to 1 xtal
setting irradiation to NM-292
setting level to A
setting irradiation_level to A
setting sample to YNP-14-1084.1
setting material to Sanidine
setting project to IR986
setting mass_spectrometer to jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
adding new session for jan
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment: 1 xtal %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1384f1090> len t=120
baseline Ar41. v=-0.0925195106926, e=0.00301648547808
get signal data Ar41 H2
Get data signal Ar41 0.012+/-0.004 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1384f1910> len t=120
baseline Ar40. v=0.0778164588559, e=0.00344483139752
get signal data Ar40 H1
Get data signal Ar40 0.632+/-0.008 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x1384f1d50> len t=120
baseline Ar39. v=0.134760065419, e=0.00468927495661
get signal data Ar39 AX
Get data signal Ar39 0.027+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1384f1a90> len t=120
baseline Ar38. v=-0.0295156003045, e=0.00201603500582
get signal data Ar38 L1
Get data signal Ar38 0.0067+/-0.0023 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1384f1350> len t=120
baseline Ar37. v=-0.00475289816142, e=0.00372149344415
get signal data Ar37 L2
Get data signal Ar37 0.047+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x1384f1310> len t=120
baseline Ar36. v=8.65346447667e-06, e=3.63871321314e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00398+/-0.00017 len t=400
65854-01A added analysis time 0.520123958588s
analysis added to mass spec database
mass spec save time= 0.529
persistence save - dvc
================= post measurement started
create new session 4949175664
close session 4949175664
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - 54-01A.json
add to repo msg=modified - 54-01A.dat.json
add to repo msg=modified - 54-01A.blan.json
add to repo msg=modified - 54-01A.inte.json
add to repo msg=modified - 54-01A.icfa.json
add to repo msg=modified - 54-01A.base.json
not at valid file /Users/jan/Pychron/data/.dvc/repositories/IR986/658/tags/54-01A.tags.json
add to repo msg=modified - 54-01A.peak.json
add to repo msg=modified - 54-01A.extr.json
not at valid file /Users/jan/Pychron/data/.dvc/repositories/IR986/658/monitor/54-01A.moni.json
commit message=<COLLECTION>
add to repo msg=modified - 54-01A.inte.json
add to repo msg=modified - 54-01A.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - 54-01A.blan.json
commit message=<BLANKS> preceding bu-FC-J-8458
add to repo msg=modified - 54-01A.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x16ddb7890>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4949175664
add association IR986
get identifier "65854"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x141603150>
close session 4949175664
================= post measurement finished
15:59:59 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/Pychron/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
15:59:59 -- ******* Post Run Check Passed *******
15:59:59 -- Automated run 65854-01A success duration: 696.243 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=2
update duration runid=65854-01A, duration=696.242651939, md5=a5238c40
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=539.8, duration=0.000365018844604
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.09944152832e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.29425048828e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000115871429443
executed snippet estimated_duration=0.0, duration=0.0074520111084
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000180006027222
executed snippet estimated_duration=4.0, duration=0.00603699684143
Script duration 540.0
Run total estimated duration= 541.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:540.0
pump_ms in script context. using previous estimated duration
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
pump_extraction_line in script context. using previous estimated duration
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
script duration name:co2 seconds:0.0
Script duration 540.0
Run total estimated duration= 541.000
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.69820404053e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000127077102661
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000108003616333
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000116109848022
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.00950622559e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.89437103271e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000148057937622
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.00012993812561
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000135898590088
executed snippet estimated_duration=250.0, duration=0.0250699520111
script duration name:sniffair_x2 seconds:250.0
Script duration 790.0
Run total estimated duration= 791.000
script duration name:unknown400_120 seconds:540.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.0001380443573
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000104904174805
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.89437103271e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.20024108887e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000120878219604
executed snippet estimated_duration=108.0, duration=0.0196161270142
script duration name:cocktail_x1 seconds:108.0
Script duration 648.0
Run total estimated duration= 649.000
nruns=14 before=5.0, run_dur=7932.0, btw=355.0
write rem/ex queues
/Users/jan/Pychron/experiments/rem/Load1832.rem.txt
/Users/jan/Pychron/experiments/rem/Load1832.ex.txt
doing event level: 3
add run
